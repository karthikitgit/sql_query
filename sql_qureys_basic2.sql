Using Aliases:
------------------------------------------------------------------------------------------------------------------------------
SELECT s.name AS student_name, g.subject AS subject_name
FROM Students s
INNER JOIN Grades g ON s.id = g.student_id;
------------------------------------------------------------------------------------------------------------------------------
Using Subqueries:
------------------------------------------------------------------------------------------------------------------------------
SELECT name, age
FROM Students
WHERE age > (SELECT AVG(age) FROM Students);
------------------------------------------------------------------------------------------------------------------------------
Using LIKE for Pattern Matching:
------------------------------------------------------------------------------------------------------------------------------
SELECT * FROM Students
WHERE name LIKE 'A%';
------------------------------------------------------------------------------------------------------------------------------
Using BETWEEN for Range Selection:
------------------------------------------------------------------------------------------------------------------------------
SELECT * FROM Students
WHERE age BETWEEN 20 AND 25;
------------------------------------------------------------------------------------------------------------------------------
Using IN for Multiple Conditions:
------------------------------------------------------------------------------------------------------------------------------
SELECT * FROM Students
WHERE grade IN ('A', 'B');
------------------------------------------------------------------------------------------------------------------------------
Using DISTINCT for Unique Values:
------------------------------------------------------------------------------------------------------------------------------
SELECT DISTINCT grade FROM Students;

------------------------------------------------------------------------------------------------------------------------------
Using LIMIT for Result Limitation:
------------------------------------------------------------------------------------------------------------------------------
SELECT * FROM Students
ORDER BY age DESC
LIMIT 5;
------------------------------------------------------------------------------------------------------------------------------
Aggregate Functions - AVG, SUM, MAX, MIN:

SELECT AVG(age), SUM(age), MAX(age), MIN(age)
FROM Students;
-----------------------------------------------------------------------------------------------------------------------------

Conditional Aggregation with CASE:

SELECT
    grade,
    COUNT(CASE WHEN age >= 20 THEN 1 ELSE NULL END) AS count_above_20,
    COUNT(CASE WHEN age < 20 THEN 1 ELSE NULL END) AS count_below_20
FROM Students
GROUP BY grade;
------------------------------------------------------------------------------------------------------------------------------
Using HAVING with GROUP BY:
------------------------------------------------------------------------------------------------------------------------------
SELECT grade, COUNT(*) as count
FROM Students
GROUP BY grade
HAVING COUNT(*) > 1;
------------------------------------------------------------------------------------------------------------------------------
Working with NULL Values:
------------------------------------------------------------------------------------------------------------------------------
SELECT * FROM Students
WHERE age IS NULL;